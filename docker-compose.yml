##
# Resources:
# https://docs.confluent.io/platform/current/installation/docker/config-reference.html
# https://github.com/confluentinc/examples/blob/6.1.0-post/microservices-orders/docker-compose.yml
##
version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  kafka:
    image: confluentinc/cp-kafka:6.1.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-setup:
    image: confluentinc/cp-kafka:6.1.0
    hostname: kafka-setup
    container_name: kafka-setup
    depends_on:
      - kafka
    command:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to be ready..."
        cub kafka-ready -b kafka:9092 1 40
        echo "Kafka ready"
        echo "Creating test topics"
        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic "train-arrivals-and-departures-Madrid"
        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 --topic "train-arrivals-and-departures-Valencia"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_ADVERTISED_LISTENERS: ignored
  schema-registry:
    image: apicurio/apicurio-registry-mem:latest
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - 8081:8080
    depends_on:
      - kafka
  postgres:
    image: postgres:13.2-alpine
    hostname: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: s3c4Et
    volumes:
      - "$PWD/docker/postgres:/docker-entrypoint-initdb.d"
  adminer:
    image: adminer
    hostname: adminer
    container_name: adminer
    ports:
      - 8082:8080